/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SupportRequestType as PrismaSupportRequestType,
} from "@prisma/client";

export class SupportRequestTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SupportRequestTypeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.supportRequestType.count(args);
  }

  async supportRequestTypes(
    args: Prisma.SupportRequestTypeFindManyArgs
  ): Promise<PrismaSupportRequestType[]> {
    return this.prisma.supportRequestType.findMany(args);
  }
  async supportRequestType(
    args: Prisma.SupportRequestTypeFindUniqueArgs
  ): Promise<PrismaSupportRequestType | null> {
    return this.prisma.supportRequestType.findUnique(args);
  }
  async createSupportRequestType(
    args: Prisma.SupportRequestTypeCreateArgs
  ): Promise<PrismaSupportRequestType> {
    return this.prisma.supportRequestType.create(args);
  }
  async updateSupportRequestType(
    args: Prisma.SupportRequestTypeUpdateArgs
  ): Promise<PrismaSupportRequestType> {
    return this.prisma.supportRequestType.update(args);
  }
  async deleteSupportRequestType(
    args: Prisma.SupportRequestTypeDeleteArgs
  ): Promise<PrismaSupportRequestType> {
    return this.prisma.supportRequestType.delete(args);
  }
}
