/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SupportRequestDetail as PrismaSupportRequestDetail,
} from "@prisma/client";

export class SupportRequestDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SupportRequestDetailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.supportRequestDetail.count(args);
  }

  async supportRequestDetails(
    args: Prisma.SupportRequestDetailFindManyArgs
  ): Promise<PrismaSupportRequestDetail[]> {
    return this.prisma.supportRequestDetail.findMany(args);
  }
  async supportRequestDetail(
    args: Prisma.SupportRequestDetailFindUniqueArgs
  ): Promise<PrismaSupportRequestDetail | null> {
    return this.prisma.supportRequestDetail.findUnique(args);
  }
  async createSupportRequestDetail(
    args: Prisma.SupportRequestDetailCreateArgs
  ): Promise<PrismaSupportRequestDetail> {
    return this.prisma.supportRequestDetail.create(args);
  }
  async updateSupportRequestDetail(
    args: Prisma.SupportRequestDetailUpdateArgs
  ): Promise<PrismaSupportRequestDetail> {
    return this.prisma.supportRequestDetail.update(args);
  }
  async deleteSupportRequestDetail(
    args: Prisma.SupportRequestDetailDeleteArgs
  ): Promise<PrismaSupportRequestDetail> {
    return this.prisma.supportRequestDetail.delete(args);
  }
}
