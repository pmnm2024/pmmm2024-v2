/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, OutBox as PrismaOutBox } from "@prisma/client";

export class OutBoxServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.OutBoxCountArgs, "select">): Promise<number> {
    return this.prisma.outBox.count(args);
  }

  async outBoxes(args: Prisma.OutBoxFindManyArgs): Promise<PrismaOutBox[]> {
    return this.prisma.outBox.findMany(args);
  }
  async outBox(
    args: Prisma.OutBoxFindUniqueArgs
  ): Promise<PrismaOutBox | null> {
    return this.prisma.outBox.findUnique(args);
  }
  async createOutBox(args: Prisma.OutBoxCreateArgs): Promise<PrismaOutBox> {
    return this.prisma.outBox.create(args);
  }
  async updateOutBox(args: Prisma.OutBoxUpdateArgs): Promise<PrismaOutBox> {
    return this.prisma.outBox.update(args);
  }
  async deleteOutBox(args: Prisma.OutBoxDeleteArgs): Promise<PrismaOutBox> {
    return this.prisma.outBox.delete(args);
  }
}
