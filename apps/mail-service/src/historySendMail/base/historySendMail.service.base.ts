/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HistorySendMail as PrismaHistorySendMail,
} from "@prisma/client";

export class HistorySendMailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HistorySendMailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.historySendMail.count(args);
  }

  async historySendMails(
    args: Prisma.HistorySendMailFindManyArgs
  ): Promise<PrismaHistorySendMail[]> {
    return this.prisma.historySendMail.findMany(args);
  }
  async historySendMail(
    args: Prisma.HistorySendMailFindUniqueArgs
  ): Promise<PrismaHistorySendMail | null> {
    return this.prisma.historySendMail.findUnique(args);
  }
  async createHistorySendMail(
    args: Prisma.HistorySendMailCreateArgs
  ): Promise<PrismaHistorySendMail> {
    return this.prisma.historySendMail.create(args);
  }
  async updateHistorySendMail(
    args: Prisma.HistorySendMailUpdateArgs
  ): Promise<PrismaHistorySendMail> {
    return this.prisma.historySendMail.update(args);
  }
  async deleteHistorySendMail(
    args: Prisma.HistorySendMailDeleteArgs
  ): Promise<PrismaHistorySendMail> {
    return this.prisma.historySendMail.delete(args);
  }
}
